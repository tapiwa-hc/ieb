{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin.guard.ts","./src/app/all-item/all-item.component.ts","./src/app/all-item/all-item.component.html","./src/app/all/all.component.ts","./src/app/all/all.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/base.guard.ts","./src/app/device.guard.ts","./src/app/device.service.ts","./src/app/directives/autofocus.directive.ts","./src/app/export/export.component.ts","./src/app/export/export.component.html","./src/app/feed-item/feed-item.component.ts","./src/app/feed-item/feed-item.component.html","./src/app/feed/feed.component.ts","./src/app/feed/feed.component.html","./src/app/groups/groups-dialog/groups-dialog.component.ts","./src/app/groups/groups-dialog/groups-dialog.component.html","./src/app/groups/groups-item/groups-item.component.ts","./src/app/groups/groups-item/groups-item.component.html","./src/app/groups/groups.component.ts","./src/app/groups/groups.component.html","./src/app/help.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/interfaces/Groups.ts","./src/app/interfaces/Notices.ts","./src/app/interfaces/Users.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/marked.pipe.ts","./src/app/material/material.module.ts","./src/app/mobile/mobile-login/mobile-login.component.ts","./src/app/mobile/mobile-login/mobile-login.component.html","./src/app/new/new.component.ts","./src/app/new/new.component.html","./src/app/notice.service.ts","./src/app/password/password.component.ts","./src/app/password/password.component.html","./src/app/pending-dialog/pending-dialog.component.ts","./src/app/pending-dialog/pending-dialog.component.html","./src/app/pending-item/pending-item.component.ts","./src/app/pending-item/pending-item.component.html","./src/app/pending/pending.component.ts","./src/app/pending/pending.component.html","./src/app/printout/printout.component.ts","./src/app/printout/printout.component.html","./src/app/pupil.guard.ts","./src/app/resolvers/all-table-resolver.service.ts","./src/app/resolvers/base-resolver.service.ts","./src/app/resolvers/feed-resolver.service.ts","./src/app/resolvers/groups-resolver.service.ts","./src/app/resolvers/pending-resolver.service.ts","./src/app/resolvers/sections-resolver.service.ts","./src/app/resolvers/students-resolver.service.ts","./src/app/resolvers/subs-resolver.service.ts","./src/app/shared/password.validator.ts","./src/app/staff.guard.ts","./src/app/table/table-item/table-item.component.ts","./src/app/table/table-item/table-item.component.html","./src/app/table/table.component.ts","./src/app/table/table.component.html","./src/app/token-interceptor.service.ts","./src/app/top-bar/top-bar.component.ts","./src/app/top-bar/top-bar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { BaseGuard } from './base.guard';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard extends BaseGuard implements CanActivate {\n  requiredRights = 3;\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AllNotice } from '../interfaces/Notices';\nimport { TableItemComponent } from '../table/table-item/table-item.component';\n\n@Component({\n  selector: '[app-all-item]',\n  templateUrl: './all-item.component.html',\n  styleUrls: ['../table/table-item/table-item.component.css'],\n})\nexport class AllItemComponent extends TableItemComponent implements OnInit {\n  @Input() notice: AllNotice;\n  private _rights: number | string;\n  editable: boolean;\n\n  // Initialises _rights and editable\n  init() {\n    this._rights = this.auth.rights;\n    this.editable =\n      this._rights >= 3 ||\n      (this._rights >= 2 && this.notice.userID == this.auth.userID);\n  }\n\n  get rights() {\n    return this._rights;\n  }\n}\n","<td>{{ notice.display_date | date: \"d MMM\" }}</td>\n<td>{{ notice.grouping_name }}</td>\n<ng-container *ngIf=\"editable\">\n  <td (dblclick)=\"allowTitleEdits()\">\n    <textarea\n      title=\"Double-Click to Edit\"\n      cdkTextareaAutosize\n      [(ngModel)]=\"notice.title\"\n      [disabled]=\"!editableTitle\"\n      required\n      #title=\"ngModel\"\n      maxlength=\"100\"\n    ></textarea>\n    <div *ngIf=\"editableTitle\">\n      <button\n        mat-raised-button\n        class=\"keep\"\n        (click)=\"keepTitle()\"\n        [disabled]=\"title.invalid\"\n      >\n        {{ rights >= 3 ? \"Keep\" : \"Request\" }}\n      </button>\n      <button mat-raised-button class=\"discard\" (click)=\"discardTitle()\">\n        Discard\n      </button>\n    </div>\n  </td>\n  <td (dblclick)=\"allowDescrEdits()\">\n    <textarea\n      title=\"Double-Click to Edit\"\n      cdkTextareaAutosize\n      [(ngModel)]=\"notice.description\"\n      [disabled]=\"!editableDescr\"\n      required\n      #descr=\"ngModel\"\n      maxlength=\"1000\"\n    ></textarea>\n    <div *ngIf=\"editableDescr\">\n      <button\n        mat-raised-button\n        class=\"keep\"\n        (click)=\"keepDescr()\"\n        [disabled]=\"descr.invalid\"\n      >\n        {{ rights >= 3 ? \"Keep\" : \"Request\" }}\n      </button>\n      <button mat-raised-button class=\"discard\" (click)=\"discardDescr()\">\n        Discard\n      </button>\n    </div>\n  </td>\n</ng-container>\n<ng-container *ngIf=\"!editable\">\n  <td>{{ notice.title }}</td>\n  <td>{{ notice.description }}</td>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AllNotice } from '../interfaces/Notices';\nimport { TableComponent } from '../table/table.component';\n\n@Component({\n  selector: 'app-all',\n  templateUrl: './all.component.html',\n  styleUrls: ['../table/table.component.css'],\n})\nexport class AllComponent extends TableComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription = new Subscription();\n  allNotices: AllNotice[];\n\n  ngOnInit(): void {\n    this.getAll();\n  }\n  get rights() {\n    return this.auth.rights;\n  }\n\n  // assigns data of notices to allNotices\n  private getAll() {\n    this.subscriptions.add(\n      this.route.data.subscribe((data: { allNotices: AllNotice[] }) => {\n        this.allNotices = data.allNotices;\n      })\n    );\n  }\n\n  // sends an effective ping through the savePing subject\n  async saveChanges() {\n    this.savePing.next('');\n    if (this.rights <= 2) {\n      this.router.navigate(['/all']);\n    }\n  }\n\n  // unsubscribes from all Observables\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div class=\"container content\">\n  <table class=\"all table rounded-sm\">\n    <thead class=\"rounded-sm\">\n      <th class=\"th-date\">Date</th>\n      <th class=\"th-group\">Group</th>\n      <th class=\"th-title\">Title</th>\n      <th class=\"th-descr\">Description</th>\n    </thead>\n    <tr\n      *ngFor=\"let notice of allNotices\"\n      app-all-item\n      [notice]=\"notice\"\n      [savePing]=\"savePing\"\n      (error)=\"warn($event)\"\n    ></tr>\n  </table>\n  <div class=\"save\" *ngIf=\"rights >= 2\">\n    <button mat-raised-button (click)=\"saveChanges()\">Save Changes</button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './admin.guard';\nimport { AllComponent } from './all/all.component';\nimport { AuthGuard } from './auth.guard';\nimport { DeviceGuard } from './device.guard';\nimport { ExportComponent } from './export/export.component';\nimport { FeedComponent } from './feed/feed.component';\nimport { GroupsComponent } from './groups/groups.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { MobileLoginComponent } from './mobile/mobile-login/mobile-login.component';\nimport { NewComponent } from './new/new.component';\nimport { PasswordComponent } from './password/password.component';\nimport { PendingComponent } from './pending/pending.component';\nimport { PupilGuard } from './pupil.guard';\nimport { AllTableResolverService } from './resolvers/all-table-resolver.service';\nimport { FeedResolverService } from './resolvers/feed-resolver.service';\nimport { GroupsResolverService } from './resolvers/groups-resolver.service';\nimport { PendingResolverService } from './resolvers/pending-resolver.service';\nimport { SectionsResolverService } from './resolvers/sections-resolver.service';\nimport { StudentsResolverService } from './resolvers/students-resolver.service';\nimport { SubsResolverService } from './resolvers/subs-resolver.service';\nimport { StaffGuard } from './staff.guard';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    data: { title: 'Login' },\n    canActivate: [DeviceGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full',\n  },\n  {\n    path: '',\n    children: [\n      {\n        path: 'home',\n        component: HomeComponent,\n        data: { title: 'Home' },\n      },\n      {\n        path: 'pending',\n        component: PendingComponent,\n        data: { title: 'Pending' },\n        canActivate: [AdminGuard],\n        resolve: {\n          pendingNotices: PendingResolverService,\n        },\n        runGuardsAndResolvers: 'always',\n      },\n      {\n        path: 'groups',\n        component: GroupsComponent,\n        data: { title: 'Groups' },\n        canActivate: [AdminGuard],\n        resolve: {\n          groupList: GroupsResolverService,\n          sectionInfo: SectionsResolverService,\n        },\n        runGuardsAndResolvers: 'always',\n      },\n      {\n        path: 'new',\n        component: NewComponent,\n        data: { title: 'New' },\n        canActivate: [StaffGuard],\n        resolve: {\n          groupList: GroupsResolverService,\n          sectionInfo: SectionsResolverService,\n          students: StudentsResolverService,\n        },\n      },\n      {\n        path: 'export',\n        component: ExportComponent,\n        data: { title: 'Export' },\n        canActivate: [StaffGuard],\n        resolve: {\n          sectionInfo: SectionsResolverService,\n        },\n      },\n      {\n        path: 'all',\n        component: AllComponent,\n        data: { title: 'All' },\n        canActivate: [PupilGuard],\n        resolve: {\n          allNotices: AllTableResolverService,\n        },\n        runGuardsAndResolvers: 'always',\n      },\n      {\n        path: 'feed',\n        component: FeedComponent,\n        data: { title: 'My Feed' },\n        canActivate: [PupilGuard],\n        resolve: {\n          sectionInfo: SectionsResolverService,\n          feed: FeedResolverService,\n          subs: SubsResolverService,\n        },\n      },\n      {\n        path: 'password',\n        component: PasswordComponent,\n        data: { title: 'Change Password' },\n        canActivate: [PupilGuard],\n      },\n    ],\n    canActivate: [AuthGuard, DeviceGuard], // <-- Activate only if logged in and on desktop\n  },\n  {\n    path: 'mobile',\n    children: [\n      {\n        path: 'login',\n        component: MobileLoginComponent,\n        data: { title: 'Login' },\n        canActivate: [DeviceGuard],\n      },\n      {\n        path: 'feed',\n        component: FeedComponent,\n        data: { title: 'My Feed' },\n        resolve: {\n          feed: FeedResolverService,\n          sectionInfo: SectionsResolverService,\n          subs: SubsResolverService,\n        },\n        canActivate: [AuthGuard, DeviceGuard],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n      onSameUrlNavigation: 'reload',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n  ActivatedRoute,\n  Event as RouterEvent,\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router,\n} from '@angular/router';\nimport { filter, map, mergeMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'MyDRO';\n\n  public showOverlay = true;\n\n  constructor(\n    private router: Router,\n    private titleService: Title,\n    private route: ActivatedRoute\n  ) {\n    router.events.subscribe((event: RouterEvent) => {\n      this.navigationInterceptor(event);\n    });\n  }\n  ngOnInit(): void {\n    this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationEnd),\n        map(() => this.route),\n        map((route) => {\n          while (route.firstChild) route = route.firstChild;\n          return route;\n        }),\n        mergeMap((route) => route.data)\n      )\n      .subscribe((event) => {\n        this.titleService.setTitle(event['title'] + ' | MyDRO');\n        this.title = event['title'];\n      });\n  }\n  // Shows and hides the loading spinner during RouterEvent changes\n  navigationInterceptor(event: RouterEvent): void {\n    if (event instanceof NavigationStart) {\n      this.showOverlay = true;\n    }\n    if (event instanceof NavigationEnd) {\n      this.showOverlay = false;\n    }\n\n    // Set loading state to false in both of the below events to hide the spinner in case a request fails\n    if (event instanceof NavigationCancel) {\n      this.showOverlay = false;\n    }\n    if (event instanceof NavigationError) {\n      this.showOverlay = false;\n    }\n  }\n}\n","<nav class=\"app-top-bar\">\n  <app-top-bar [title]=\"title\"></app-top-bar>\n</nav>\n<nav>\n  <app-top-bar title=\"\"></app-top-bar>\n</nav>\n<div class=\"my-overlay\" *ngIf=\"showOverlay\">\n  <i class=\"fa fa-spinner fa-spin\" aria-hidden=\"true\"></i>\n</div>\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { TextFieldModule } from '@angular/cdk/text-field';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AllItemComponent } from './all-item/all-item.component';\nimport { AllComponent } from './all/all.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ExportComponent } from './export/export.component';\nimport { FeedItemComponent } from './feed-item/feed-item.component';\nimport { FeedComponent } from './feed/feed.component';\nimport { GroupsDialogComponent } from './groups/groups-dialog/groups-dialog.component';\nimport { GroupsItemComponent } from './groups/groups-item/groups-item.component';\nimport { GroupsComponent } from './groups/groups.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { MarkedPipe } from './marked.pipe';\nimport { MaterialModule } from './material/material.module';\nimport { MobileLoginComponent } from './mobile/mobile-login/mobile-login.component';\nimport { NewComponent } from './new/new.component';\nimport { PasswordComponent } from './password/password.component';\nimport { PendingDialogComponent } from './pending-dialog/pending-dialog.component';\nimport { PendingItemComponent } from './pending-item/pending-item.component';\nimport { PendingComponent } from './pending/pending.component';\nimport { PrintoutComponent } from './printout/printout.component';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { TableComponent } from './table/table.component';\nimport { TableItemComponent } from './table/table-item/table-item.component';\nimport { AutofocusDirective } from './directives/autofocus.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopBarComponent,\n    PendingComponent,\n    PendingItemComponent,\n    GroupsComponent,\n    GroupsItemComponent,\n    NewComponent,\n    ExportComponent,\n    MarkedPipe,\n    AllComponent,\n    AllItemComponent,\n    FeedComponent,\n    PrintoutComponent,\n    LoginComponent,\n    HomeComponent,\n    MobileLoginComponent,\n    FeedItemComponent,\n    PasswordComponent,\n    PendingDialogComponent,\n    GroupsDialogComponent,\n    TableComponent,\n    TableItemComponent,\n    AutofocusDirective,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    TextFieldModule,\n  ],\n  providers: [\n    Title,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { BaseGuard } from './base.guard';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard extends BaseGuard implements CanActivate {\n  /*\n   * Returns a boolean of whether a user is logged in.\n      If true, navigation continues. \n      If false, navigation is cancelled.\n   */\n  canActivate(): boolean {\n    if (!this.auth.hasDetails) {\n      if (!this.auth.isLoggedIn) {\n        let snackBarRef = this.snackBar.open(\n          'Please login to continue',\n          'LOGIN',\n          { duration: 5000 }\n        );\n        snackBarRef.onAction().subscribe(() => {\n          this.router.navigate(['/login']);\n        });\n        return false;\n      }\n      this.auth.fetchDetails(); // if logged in but no details (typical after reload/revisit)\n      return true;\n    } else {\n      return true;\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\nimport { User } from './interfaces/Users';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private _loginUrl = 'http://localhost:3000/api/login';\n  private _passwordUrl = 'http://localhost:3000/api/password';\n  private _mobileLoginUrl = 'http://localhost:3000/api/mobile/login';\n  private _user: User;\n\n  /*\n   * Navigates to '/home'\n   */\n  private _loginObserver = {\n    next: (res) => {\n      localStorage.setItem('token', res.token);\n      this._user = res.user;\n      localStorage.setItem('user', JSON.stringify(this._user));\n      while (!this.isLoggedIn) {}\n      this.router.navigate(['home']);\n    },\n  };\n\n  /*\n   * @params {@Injectable} Dependencies to inject\n   */\n  constructor(private http: HttpClient, private router: Router) {}\n\n  /*\n   * Returns an RxJS Observable of the results of a POST request to '/login'\n   * @param {User} [user] object with user's username and password\n   * @returns {Observable<any>}\n   */\n  login(user: User) {\n    return this.http\n      .post<any>(this._loginUrl, user)\n      .pipe(tap(this._loginObserver));\n  }\n\n  /*\n   * Returns an RxJS Observable of the results of a POST request to '/mobile/login'\n   * @param {number} [adminNo] student's admin number\n   * @returns {Observable<any>}\n   */\n  mobileLogin(adminNo: number) {\n    return this.http\n      .post<any>(this._mobileLoginUrl, { adminNo: adminNo })\n      .pipe(tap(this._loginObserver));\n  }\n\n  /*\n   * Returns an RxJS Observable of the results of a POST request to '/mobile/login'\n   * @param {any} [oldPass] user's old password to change\n   * @param {any} [newPass] user's new desired password\n   * @returns {Observable<any>}\n   */\n  changePassword(oldPass: any, newPass: any) {\n    return this.http\n      .post(this._passwordUrl, { oldPass: oldPass, newPass: newPass })\n      .pipe(\n        tap(() => {\n          this.router.navigate(['home']);\n        })\n      );\n  }\n\n  /*\n   * Attempts to assign an object of a user’s details to the _user property, otherwise logs user out\n   */\n  fetchDetails(): void {\n    try {\n      this._user = JSON.parse(localStorage.getItem('user'));\n    } catch (e) {\n      this.logout();\n    }\n  }\n\n  /*\n   * Resets locally stored user details and navigates to “Login”\n   */\n  logout(): void {\n    this._user = null;\n    localStorage.clear();\n    this.router.navigate(['/login']);\n  }\n\n  /*\n   * Returns a boolean of whether a visitor is logged in\n   */\n  get isLoggedIn(): boolean {\n    return !!localStorage.getItem('token');\n  }\n\n  /*\n   * Returns a boolean of whether the _user property has been initialised\n   */\n  get hasDetails(): boolean {\n    return !!this._user;\n  }\n\n  /*\n   * Returns a string of the current user’s locally stored token\n   */\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  /*\n   * Returns the current user’s authorisation rights\n   */\n  get rights(): string | number {\n    try {\n      return this._user.rights;\n    } catch (e) {\n      setTimeout(() => {\n        return this._user.rights;\n      }, 1000);\n    }\n  }\n\n  /*\n   * Returns the current user’s id\n   */\n  get userID(): number {\n    return this._user.id;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BaseGuard implements CanActivate {\n  protected requiredRights: number;\n\n  /*\n   * @params {@Injectable} Dependencies to inject\n   */\n  constructor(\n    protected auth: AuthService,\n    protected router: Router,\n    protected snackBar: MatSnackBar\n  ) {}\n\n  /*\n   * Returns a boolean of whether a user has permission to activate a requested route.\n      If true, navigation continues. \n      If false, navigation is cancelled.\n   */\n  canActivate(): boolean {\n    if (this.auth.rights >= this.requiredRights) {\n      return true;\n    }\n    this.snackBar.open('You do not have access to this page', undefined, {\n      duration: 2000,\n    });\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { DeviceService } from './device.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeviceGuard implements CanActivate {\n  constructor(private router: Router, private device: DeviceService) {}\n  /*\n   * Returns a boolean of whether a user’s device is suitable for the route being accessed.\n   * @param {ActivatedRouteSnapshot} [route] \"Contains the information about a route ... at a particular moment in time\"\n   * @param {RouterStateSnapshot} [state] \"Represents the state of the router at a moment in time.\"\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    let isMobileRoute = state.url.includes('mobile');\n    if (\n      (this.device.mobile && isMobileRoute) ||\n      (this.device.web && !isMobileRoute)\n    ) {\n      return true;\n    } else if (this.device.web) {\n      this.router.navigate([state.url.replace('mobile/', '')]);\n    } else if (this.device.mobile) {\n      if (state.url.includes('login')) {\n        this.router.navigate(['/mobile/login']);\n      } else {\n        this.router.navigate(['/mobile/feed']);\n      }\n    }\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeviceService {\n  constructor() {}\n\n  /*\n   * Returns a boolean of whether the visitor is a web user, based on the browser’s navigator.userAgent\n   */\n  get web(): boolean {\n    return !navigator.userAgent.match(/iPhone|iPad|iPod|Android/i);\n  }\n  /*\n   * Returns a boolean of whether the visitor is a web user, based on the browser’s navigator.userAgent\n   */\n  get mobile(): boolean {\n    return !!navigator.userAgent.match(/iPhone|iPad|iPod|Android/i);\n  }\n}\n","/*\n * Adapted from https://stackoverflow.com/a/55237905/13645562\n * Automatically focuses a targeted MatInput element after 1 second\n */\n\nimport { Directive, OnInit } from '@angular/core';\nimport { MatInput } from '@angular/material/input';\n\n@Directive({\n  selector: '[appAutofocus]',\n})\nexport class AutofocusDirective implements OnInit {\n  constructor(private matInput: MatInput) {}\n\n  ngOnInit() {\n    setTimeout(() => this.matInput.focus(), 1000);\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PrintList } from '../interfaces/Notices';\nimport { SectionInfo } from '../interfaces/Section';\nimport { NoticeService } from '../notice.service';\n\n@Component({\n  selector: 'app-export',\n  templateUrl: './export.component.html',\n  styleUrls: ['./export.component.css'],\n})\nexport class ExportComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription = new Subscription();\n  exportModel = {\n    date: '2020-02-25',\n    sections: [],\n    today: false,\n    all: false,\n  };\n\n  ready: boolean = false;\n\n  sectionInfo: SectionInfo[];\n  dailyNotices: PrintList[];\n\n  @ViewChild('exportForm') form: NgForm;\n\n  constructor(\n    private noticeService: NoticeService,\n    private route: ActivatedRoute,\n    private snackBar: MatSnackBar\n  ) {}\n\n  // assigns resolved SectionInfo[] data to sectionInfo\n  private getSectionInfo() {\n    this.subscriptions.add(\n      this.route.data.subscribe((data: { sectionInfo: SectionInfo[] }) => {\n        this.sectionInfo = data.sectionInfo;\n      })\n    );\n  }\n  ngOnInit(): void {\n    this.getSectionInfo();\n  }\n\n  // selects all sections\n  selectAllSections() {\n    this.exportModel.sections = [];\n    this.sectionInfo.forEach((s) => {\n      this.exportModel.sections.push(s.id);\n    });\n  }\n\n  // sets date to current date\n  today() {\n    this.exportModel.date = new Date().toISOString().substr(0, 10);\n  }\n\n  // sends request to express server\n  onSubmit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.subscriptions.add(\n      this.noticeService\n        .exportToPDF(this.exportModel.date, this.exportModel.sections)\n        .subscribe(\n          (res) => {\n            this.dailyNotices = res;\n            this.ready = true;\n          },\n          () => {\n            this.snackBar.open(\n              'An error occurred. Please try again after a moment.',\n              undefined,\n              { duration: 5000 }\n            );\n          }\n        )\n    );\n  }\n\n  // unsubscribes from all Observables\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div *ngIf=\"!ready\" class=\"container content\">\n  <div class=\"export-form rounded-sm\">\n    <form\n      #exportForm=\"ngForm\"\n      (ngSubmit)=\"onSubmit()\"\n      class=\"col-sm-12 bg-white p-5\"\n    >\n      <div class=\"w-100 row my-5\">\n        <div class=\"col-sm-4 d-flex flex-column align-items-end\">\n          <label for=\"date\">Date:</label>\n          <mat-checkbox\n            [(ngModel)]=\"exportModel.today\"\n            name=\"today\"\n            (click)=\"today()\"\n            labelPosition=\"end\"\n          >\n            Today\n          </mat-checkbox>\n        </div>\n        <mat-form-field\n          class=\"col-sm-8 w-50\"\n          style=\"width: 50%\"\n          appearance=\"fill\"\n        >\n          <input\n            matInput\n            type=\"date\"\n            name=\"date\"\n            #date=\"ngModel\"\n            [(ngModel)]=\"exportModel.date\"\n            [disabled]=\"exportModel.today\"\n            required\n            appAutofocus\n          />\n          <mat-error *ngIf=\"date.errors?.required\">\n            This field is required\n          </mat-error>\n          <mat-error *ngIf=\"date.invalid\"> Invalid input </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"w-100 row my-5\">\n        <div class=\"col-sm-4 d-flex flex-column align-items-end\">\n          <label>Sections:</label>\n          <mat-checkbox\n            [(ngModel)]=\"exportModel.all\"\n            name=\"all\"\n            (click)=\"selectAllSections()\"\n            labelPosition=\"end\"\n          >\n            Select All\n          </mat-checkbox>\n        </div>\n        <mat-form-field\n          class=\"col-sm-8 w-50\"\n          style=\"width: 50%\"\n          appearance=\"fill\"\n        >\n          <mat-select\n            name=\"sections\"\n            #sections=\"ngModel\"\n            [(ngModel)]=\"exportModel.sections\"\n            [disabled]=\"exportModel.all\"\n            multiple\n            required\n          >\n            <mat-option\n              *ngFor=\"let section of sectionInfo\"\n              [value]=\"section.id\"\n              >{{ section.name }}</mat-option\n            >\n          </mat-select>\n          <mat-error *ngIf=\"sections.invalid\">\n            This field is required\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <button\n        class=\"float-right mb-3\"\n        mat-raised-button\n        color=\"primary\"\n        type=\"submit\"\n        [disabled]=\"exportForm.invalid\"\n      >\n        Proceed\n      </button>\n    </form>\n  </div>\n</div>\n\n<app-printout\n  *ngIf=\"ready\"\n  [exportModel]=\"exportModel\"\n  [dailyNotices]=\"dailyNotices\"\n  [sectionInfo]=\"sectionInfo\"\n></app-printout>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FeedNotice } from '../interfaces/Notices';\n\n@Component({\n  selector: '[app-feed-item]',\n  templateUrl: './feed-item.component.html',\n  styleUrls: ['./feed-item.component.css'],\n})\nexport class FeedItemComponent implements OnInit {\n  focused: boolean = false;\n  showEllipsis = true;\n  collapsed = false;\n\n  @Input() notices: FeedNotice[];\n  @Input() sectionName: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleCollapse() {\n    this.collapsed = !this.collapsed;\n  }\n}\n","<button mat-button class=\"my-2\" (click)=\"toggleCollapse()\">\n  {{ sectionName }}\n  <mat-icon class=\"expand-neutral\" [class.expand-rotate]=\"collapsed\"\n    >expand_more</mat-icon\n  >\n</button>\n\n<div>\n  <mat-accordion [class.d-none]=\"collapsed\" *ngFor=\"let notice of notices\">\n    <mat-expansion-panel>\n      <mat-expansion-panel-header collapsedHeight=\"4em\">\n        <mat-panel-title>{{ notice.title }}</mat-panel-title>\n        <mat-panel-description>{{\n          notice.display_date | date: \"EEEE d MMM\"\n        }}</mat-panel-description>\n      </mat-expansion-panel-header>\n      <span [innerHTML]=\"notice.description | marked\"></span>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { zip } from 'rxjs';\nimport { AuthService } from '../auth.service';\nimport { DeviceService } from '../device.service';\nimport { NoticeGroup as Subs } from '../interfaces/Groups';\nimport { Feed } from '../interfaces/Notices';\nimport { SectionInfo } from '../interfaces/Section';\nimport { NoticeService } from '../notice.service';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css'],\n})\nexport class FeedComponent implements OnInit {\n  userID: number;\n  sectionInfo: SectionInfo[];\n  feed: Feed[];\n  filteredFeed: Feed[];\n  subs: Subs[];\n  otherGroups: Subs[];\n  subCount: number;\n  editableSubs = false;\n  subsFilter: number[] = [];\n  subsToRemove: number[] = [];\n  subsToAdd: number[] = [];\n  web: boolean;\n  sbOpen = false;\n  navHeight: number;\n\n  @ViewChild('dateFrom') dateFrom: NgModel;\n  @ViewChild('dateTill') dateTill: NgModel;\n\n  constructor(\n    private noticeService: NoticeService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private device: DeviceService,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.web = this.device.web;\n    this.userID = this.authService.userID;\n    this.getSubs();\n    this.setNavPosition();\n    this.getSectionInfo();\n    this.getFeed();\n  }\n\n  // assigns resolved SectionInfo[] data to sectionInfo\n  private getSectionInfo() {\n    this.route.data.subscribe((data: { sectionInfo: SectionInfo[] }) => {\n      this.sectionInfo = data.sectionInfo;\n    });\n  }\n\n  // assigns resolved Feed[] data to feed\n  private getFeed() {\n    this.route.data.subscribe((data: { feed: Feed[] }) => {\n      this.feed = [...data.feed];\n      this.filteredFeed = [...data.feed];\n    });\n  }\n\n  // initialises subs and otherGroups with resolved Subs[] data\n  private getSubs() {\n    this.route.data.subscribe((data: { subs: Subs[] }) => {\n      this.subCount = data.subs.shift().id;\n      this.subs = data.subs.slice(0, this.subCount);\n      this.subs.sort(this.compareGroups);\n      this.otherGroups = data.subs.slice(this.subCount);\n      this.otherGroups.sort(this.compareGroups);\n    });\n  }\n\n  // helper function to compare Notice groups for sorting\n  private compareGroups(a: Subs, b: Subs) {\n    if (a.name > b.name) return 1;\n    if (a.name < b.name) return -1;\n    return 0;\n  }\n\n  // helper methods for positioning of hamburger button\n  private setNavPosition() {\n    this.navHeight = document.getElementsByTagName(\n      'app-top-bar'\n    )[0].children[0].clientHeight;\n    document.querySelector(\n      'body'\n    ).style.cssText = `--nav-ht: ${this.navHeight}px`;\n  }\n  onResize(event) {\n    if (this.web) {\n      this.setNavPosition();\n    }\n  }\n\n  // filters feed by user-selected criteria\n  filterFeed() {\n    let dateFrom = new Date(this.dateFrom.value).getTime();\n    let dateTill = new Date(this.dateTill.value).getTime();\n    this.filteredFeed = JSON.parse(JSON.stringify(this.feed));\n    if (dateFrom || dateTill || this.subsFilter) {\n      this.filteredFeed.forEach((section) => {\n        section.notices = section.notices.filter((n) => {\n          let nDate = new Date(n.display_date).getTime();\n          let out = true;\n          out = dateFrom ? dateFrom <= nDate : out;\n          out = dateTill ? out && dateTill >= nDate : out;\n          out =\n            this.subsFilter.length > 0\n              ? out && this.subsFilter.includes(n.grouping_id)\n              : out;\n          return out;\n        });\n      });\n      this.filteredFeed = this.filteredFeed.filter(\n        (section) => section.notices.length !== 0\n      );\n    }\n    window.scrollTo(0, 0);\n  }\n\n  // clears filters from feed\n  clearFilters() {\n    this.dateFrom.reset();\n    this.dateTill.reset();\n    this.subsFilter = [];\n    this.filterFeed();\n  }\n\n  editSubs() {\n    this.editableSubs = true;\n  }\n\n  // writes changes to subscriptions to the database\n  saveSubs() {\n    this.editableSubs = false;\n\n    let saveObserver = {\n      next: () => location.reload(),\n      error: () => {\n        this.snackBar.open(\n          'An error occurred. Please try again after a moment.',\n          undefined,\n          { duration: 5000 }\n        );\n      },\n    };\n    if (this.subsToAdd.length > 0 && this.subsToRemove.length > 0) {\n      let add$ = this.noticeService.addSubs(\n        this.userID,\n        this.subsToAdd.toString()\n      );\n      let remove$ = this.noticeService.removeSubs(\n        this.userID,\n        this.subsToRemove.toString()\n      );\n      let save$ = zip(add$, remove$);\n      save$.subscribe(saveObserver);\n    } else if (this.subsToAdd.length > 0) {\n      this.noticeService\n        .addSubs(this.userID, this.subsToAdd.toString())\n        .subscribe(saveObserver);\n    } else if (this.subsToRemove.length > 0) {\n      this.noticeService\n        .removeSubs(this.userID, this.subsToRemove.toString())\n        .subscribe(saveObserver);\n    }\n  }\n\n  // helper methods for tracking subscription changes before committing\n  updateUnsub(e: MatCheckboxChange, id: number) {\n    if (!e.checked) {\n      this.subsToRemove.push(id);\n    } else {\n      this.subsToRemove = this.subsToRemove.filter((i) => i != id);\n    }\n  }\n  updateSub(e: MatCheckboxChange, id: number) {\n    if (e.checked) {\n      this.subsToAdd.push(id);\n    } else {\n      this.subsToAdd = this.subsToAdd.filter((i) => i != id);\n    }\n  }\n\n  // reset sidebar, subscriptions to initial state\n  cancelSubEdit() {\n    this.editableSubs = false;\n    this.subsToAdd = [];\n    this.subsToRemove = [];\n  }\n}\n","<mat-sidenav-container>\n  <!-- <div\n    class=\"sidebar\"\n    id=\"mySidebar\"\n    *ngIf=\"web\"\n    (window:resize)=\"onResize($event)\"\n  > -->\n  <mat-sidenav #sidenav fixedInViewport [fixedTopGap]=\"navHeight\">\n    <div [class.d-none]=\"editableSubs\" class=\"px-2\">\n      <h2 (click)=\"sidenav.close()\" title=\"close\">Filter</h2>\n      <button\n        mat-button\n        style=\"height: 0 !important; position: absolute !important\"\n      >\n        <!-- 'absorbs' the auto-focus behavior -->\n      </button>\n      <button\n        mat-stroked-button\n        class=\"side-btn float-right\"\n        (click)=\"clearFilters()\"\n      >\n        Clear\n      </button>\n      <button\n        mat-stroked-button\n        class=\"side-btn float-right\"\n        (click)=\"filterFeed()\"\n      >\n        Apply\n      </button>\n      <br />\n      <hr />\n      <h2>Date</h2>\n      <div class=\"indent\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>From (Optional)</mat-label>\n          <input type=\"date\" matInput #dateFrom=\"ngModel\" ngModel />\n          <mat-error>Invalid input</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Until (Optional)</mat-label>\n          <input type=\"date\" matInput #dateTill=\"ngModel\" ngModel />\n        </mat-form-field>\n        <mat-error>Invalid input</mat-error>\n      </div>\n\n      <h2>\n        My Subscriptions\n        <button mat-icon-button *ngIf=\"web\" (click)=\"editSubs()\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </h2>\n      <div class=\"indent\">\n        <mat-selection-list [(ngModel)]=\"subsFilter\">\n          <mat-list-option\n            *ngFor=\"let sub of subs\"\n            checkboxPosition=\"before\"\n            color=\"primary\"\n            [value]=\"sub.id\"\n          >\n            {{ sub.name }}\n          </mat-list-option>\n        </mat-selection-list>\n      </div>\n    </div>\n\n    <div *ngIf=\"editableSubs && web\" class=\"px-2\">\n      <h2>\n        My Subscriptions<button mat-icon-button (click)=\"saveSubs()\">\n          <mat-icon>save</mat-icon></button\n        ><button mat-icon-button (click)=\"cancelSubEdit()\">\n          <mat-icon>cancel</mat-icon>\n        </button>\n      </h2>\n      <div class=\"indent\">\n        <ul>\n          <li *ngFor=\"let sub of subs\">\n            <mat-checkbox\n              [checked]=\"true\"\n              (change)=\"updateUnsub($event, sub.id)\"\n            >\n              {{ sub.name }}\n            </mat-checkbox>\n          </li>\n        </ul>\n\n        <ul>\n          <li *ngFor=\"let sub of otherGroups\">\n            <mat-checkbox (change)=\"updateSub($event, sub.id)\">\n              {{ sub.name }}\n            </mat-checkbox>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <!-- </div> -->\n  </mat-sidenav>\n\n  <button\n    mat-raised-button\n    id=\"toggleSB\"\n    (click)=\"sidenav.toggle()\"\n    (window:resize)=\"onResize($event)\"\n  >\n    <mat-icon>menu</mat-icon>\n  </button>\n\n  <div class=\"container content\">\n    <div class=\"col-sm-8 mx-auto py-4 rounded-sm\">\n      <div\n        *ngFor=\"let section of filteredFeed\"\n        class=\"section\"\n        app-feed-item\n        [sectionName]=\"sectionInfo[section.section - 1].name\"\n        [notices]=\"section.notices\"\n      ></div>\n    </div>\n  </div>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-groups-dialog',\n  templateUrl: './groups-dialog.component.html',\n})\nexport class GroupsDialogComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<h1 mat-dialog-title>Warning</h1>\n<mat-dialog-content>\n  <p>There are still notices in this group.</p>\n  <p>These will be lost</p>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button [mat-dialog-close]=\"true\">Continue</button>\n  <button mat-button [mat-dialog-close]=\"false\" cdkFocusInitial>Cancel</button>\n</mat-dialog-actions>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { NoticeGroup } from 'src/app/interfaces/Groups';\nimport { NoticeService } from 'src/app/notice.service';\nimport { GroupsDialogComponent } from '../groups-dialog/groups-dialog.component';\n\n@Component({\n  selector: '[app-groups-item]',\n  templateUrl: './groups-item.component.html',\n  styleUrls: ['./groups-item.component.css'],\n})\nexport class GroupsItemComponent implements OnInit {\n  @Input() group: NoticeGroup;\n  @Output() deleted = new EventEmitter<number>();\n  @ViewChild('name') name: NgModel;\n\n  editable: boolean = false;\n  initial: string;\n\n  constructor(\n    private noticeService: NoticeService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) {}\n\n  // revert changes to name\n  discardEdits(): void {\n    this.group.name = (' ' + this.initial).slice(1);\n    this.toggleEdits();\n  }\n\n  toggleEdits(): void {\n    this.editable = !this.editable;\n  }\n\n  // write changes to name to database\n  saveEdits(): void {\n    if (this.name.invalid) {\n      this.discardEdits();\n      return;\n    }\n    this.toggleEdits();\n    this.noticeService\n      .setGroupName(this.group.id, this.group.name.trim())\n      .subscribe(\n        () => {\n          this.initial = (' ' + this.group.name).slice(1);\n        },\n        () => {\n          let snackBarRef = this.snackBar.open(\n            `Failed to save. Please try again.`,\n            'OK',\n            { duration: 5000 }\n          );\n\n          snackBarRef.onAction().subscribe(() => {\n            location.reload();\n          });\n        }\n      );\n  }\n\n  // delete notice group from database\n  delete(): void {\n    this.noticeService.deleteGroup(this.group.id, false).subscribe(\n      () => {\n        this.emitDelete();\n      },\n      (err) => {\n        let errorNum = err['error']['errno'];\n        if (errorNum === 1451) {\n          let dialogRef = this.dialog.open(GroupsDialogComponent);\n          dialogRef.afterClosed().subscribe((yes) => {\n            if (yes) {\n              this.noticeService\n                .deleteGroup(this.group.id, true)\n                .subscribe(() => {\n                  this.emitDelete();\n                });\n            }\n          });\n        }\n      }\n    );\n  }\n\n  // emit deleted event to parent component\n  emitDelete() {\n    this.deleted.emit(this.group.id);\n  }\n\n  ngOnInit(): void {\n    this.initial = (' ' + this.group.name).slice(1);\n  }\n}\n","<span>\n  <input\n    type=\"text\"\n    [(ngModel)]=\"group.name\"\n    [disabled]=\"!editable\"\n    #name=\"ngModel\"\n    maxlength=\"50\"\n    required\n  />\n</span>\n<button (click)=\"delete()\">Delete</button>\n<button *ngIf=\"!editable\" (click)=\"toggleEdits()\">Edit</button>\n<button *ngIf=\"editable\" (click)=\"saveEdits()\" [disabled]=\"name.invalid\">Save</button>\n<button *ngIf=\"editable\" (click)=\"discardEdits()\">X</button>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GroupList, NewGroup } from '../interfaces/Groups';\nimport { SectionInfo } from '../interfaces/Section';\nimport { NoticeService } from '../notice.service';\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css'],\n})\nexport class GroupsComponent implements OnInit {\n  sectionInfo: SectionInfo[];\n  groupList: GroupList[];\n  @ViewChild('newForm') newForm: NgForm;\n  formModel = new NewGroup(null, '');\n  formVisible = false;\n\n  constructor(\n    private noticeService: NoticeService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.getSections();\n    this.getGroups();\n  }\n\n  // assigns resolved SectionInfo[] data to sectionInfo\n  private getSections(): void {\n    this.route.data.subscribe((data: { sectionInfo: SectionInfo[] }) => {\n      this.sectionInfo = data.sectionInfo;\n    });\n  }\n\n  // assigns resolved GroupList[] data to groupList\n  private getGroups(): void {\n    this.route.data.subscribe((data: { groupList: GroupList[] }) => {\n      this.groupList = data.groupList;\n    });\n  }\n\n  // remove NoticeGroup from local list\n  removeFromList(id) {\n    this.groupList.forEach((section) => {\n      section.groups = section.groups.filter((group) => group.id !== id);\n    });\n    this.groupList = this.groupList.filter(\n      (section) => section.groups.length !== 0\n    );\n  }\n  toggleFormVisibility() {\n    this.formVisible = !this.formVisible;\n  }\n\n  clearForm() {\n    this.newForm.reset();\n  }\n\n  // write new NoticeGroup to database\n  onSubmit() {\n    if (this.newForm.invalid) {\n      return;\n    }\n    this.noticeService.addGroup(this.formModel).subscribe(\n      (res) => {\n        this.router.navigate(['/groups']).then(() => {\n          this.clearForm();\n          this.toggleFormVisibility();\n        });\n      },\n      () => {\n        let snackBarRef = this.snackBar.open(\n          `Failed to add. Please try again.`,\n          'OK',\n          { duration: 5000 }\n        );\n\n        snackBarRef.onAction().subscribe(() => {\n          location.reload();\n        });\n      }\n    );\n  }\n}\n","<div class=\"container content\">\n  <div\n    class=\"list mx-auto col-sm-6 bg-white rounded-sm\"\n    *ngIf=\"groupList && sectionInfo\"\n  >\n    <ng-container *ngFor=\"let i of groupList\">\n      <h3>{{ sectionInfo[i.section - 1].name }}</h3>\n      <ul>\n        <li\n          *ngFor=\"let group of i.groups\"\n          app-groups-item\n          [group]=\"group\"\n          (deleted)=\"removeFromList($event)\"\n        ></li>\n      </ul>\n    </ng-container>\n  </div>\n</div>\n\n<div\n  [class.form-open]=\"formVisible\"\n  class=\"form container col-sm-6 fixed-bottom rounded-lg\"\n>\n  <button\n    class=\"fab\"\n    mat-fab\n    [class.fab-rotate]=\"formVisible\"\n    [class.form-open]=\"formVisible\"\n    id=\"showNewForm\"\n    (click)=\"toggleFormVisibility()\"\n  >\n    <mat-icon>add</mat-icon>\n  </button>\n  <div>\n    <form #newForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate class=\"p-2\">\n      <mat-form-field>\n        <mat-label>Section</mat-label>\n        <mat-select\n          required\n          name=\"section\"\n          #section=\"ngModel\"\n          [(ngModel)]=\"formModel.section\"\n        >\n          <mat-option\n            *ngFor=\"let section of sectionInfo\"\n            [value]=\"section.id\"\n            >{{ section.name }}</mat-option\n          >\n        </mat-select>\n        <mat-error *ngIf=\"section.invalid && section.touched\"\n          >Please choose a section</mat-error\n        >\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input\n          matInput\n          name=\"name\"\n          #name=\"ngModel\"\n          [(ngModel)]=\"formModel.name\"\n          required\n          maxlength=\"50\"\n        />\n        <mat-error *ngIf=\"name.invalid && name.touched\"\n          >Please provide a name</mat-error\n        >\n      </mat-form-field>\n      <br />\n      <button\n        mat-button\n        class=\"w-100\"\n        type=\"submit\"\n        [disabled]=\"newForm.form.invalid\"\n      >\n        Submit\n      </button>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root',\n})\nexport class HelpService {\n  constructor(private route: Router) {}\n\n  getHelp() {\n    let path = this.route.url;\n    window.open(`/assets/help${path}/help.html`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  private _rights: number | string;\n\n  constructor(private auth: AuthService) {}\n\n  ngOnInit(): void {\n    this._rights = this.auth.rights;\n  }\n  get rights() {\n    return this._rights;\n  }\n}\n","<div class=\"container content card-deck mx-auto text-center\">\n  <span class=\"dropdown card\" title=\"Click for menu\" *ngIf=\"rights >= 3\">\n    <div class=\"card\" data-toggle=\"dropdown\">\n      <div class=\"card-body\">Manage</div>\n      <div class=\"card-footer\"><mat-icon>expand_more</mat-icon></div>\n    </div>\n    <div\n      class=\"dropdown-menu\"\n      [class.admin]=\"rights === 3\"\n      [class.staff]=\"rights === 2\"\n      [class.pupil]=\"rights === 1\"\n    >\n      <a class=\"dropdown-item\" routerLink=\"/pending\">Pending Notices</a>\n      <a class=\"dropdown-item\" routerLink=\"/groups\">Notice Groups</a>\n    </div>\n  </span>\n  <span class=\"dropdown card\" title=\"Click for menu\" *ngIf=\"rights >= 2\">\n    <div class=\"card\" data-toggle=\"dropdown\">\n      <div class=\"card-body\">Publish</div>\n      <div class=\"card-footer\"><mat-icon>expand_more</mat-icon></div>\n    </div>\n    <div\n      class=\"dropdown-menu\"\n      [class.admin]=\"rights === 3\"\n      [class.staff]=\"rights === 2\"\n      [class.pupil]=\"rights === 1\"\n    >\n      <a class=\"dropdown-item\" routerLink=\"/new\">New Notice</a>\n      <a class=\"dropdown-item\" routerLink=\"/export\">Export to PDF</a>\n    </div>\n  </span>\n  <span class=\"dropdown card\" title=\"Click for menu\" *ngIf=\"rights >= 1\">\n    <div class=\"card\" data-toggle=\"dropdown\">\n      <div class=\"card-body\">View</div>\n      <div class=\"card-footer\"><mat-icon>expand_more</mat-icon></div>\n    </div>\n    <div\n      class=\"dropdown-menu\"\n      [class.admin]=\"rights === 3\"\n      [class.staff]=\"rights === 2\"\n      [class.pupil]=\"rights === 1\"\n    >\n      <a class=\"dropdown-item\" routerLink=\"/feed\">My Feed</a>\n      <a class=\"dropdown-item\" routerLink=\"/all\">All Notices</a>\n    </div>\n  </span>\n</div>\n","export class NoticeGroup {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport interface GroupList {\r\n  section: number;\r\n  groups: NoticeGroup[];\r\n}\r\n\r\nexport class NewGroup {\r\n  constructor(public section: number, public name: string) {}\r\n}\r\n","interface primaryAbstract {\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\ninterface secondaryAbstract extends primaryAbstract {\r\n  display_date: string;\r\n}\r\n\r\ninterface tertiaryAbstract extends secondaryAbstract {\r\n  id: number;\r\n}\r\n\r\nexport interface PrintNotice extends primaryAbstract {}\r\n\r\nexport class NewNotice implements secondaryAbstract {\r\n  constructor(\r\n    public uID: number,\r\n    public display_date: string,\r\n    public gID: number,\r\n    public title: string,\r\n    public description: string,\r\n    public tags?: string\r\n  ) {}\r\n}\r\n\r\nexport interface FeedNotice extends secondaryAbstract {\r\n  grouping_id: number;\r\n}\r\ninterface TabularNotice extends tertiaryAbstract {\r\n  grouping_name: string;\r\n}\r\n\r\nexport interface PendingNotice extends TabularNotice {\r\n  user: string;\r\n}\r\nexport interface AllNotice extends TabularNotice {\r\n  userID: number;\r\n}\r\n\r\nexport interface Feed {\r\n  section: number;\r\n  notices: FeedNotice[];\r\n}\r\n\r\nexport interface PrintList {\r\n  section: number;\r\n  notices: PrintNotice[];\r\n}\r\n","export class User {\r\n  constructor(\r\n    public username?: string,\r\n    public password?: string,\r\n    public id?: number,\r\n    public rights?: number | string,\r\n    public firstname?: string,\r\n    public surname?: string\r\n  ) {}\r\n}\r\n\r\nexport interface Student {\r\n  id: number;\r\n  firstname: string;\r\n  surname: string;\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { User } from '../interfaces/Users';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  formModel = new User('', '');\n  invalidCredentials: boolean = false;\n\n  @ViewChild('loginForm') lf: NgForm;\n\n  constructor(private authService: AuthService) {}\n\n  // query database for username and password\n  onSubmit() {\n    if (this.lf.invalid) {\n      return;\n    }\n    this.authService.login(this.formModel).subscribe(\n      () => {},\n      (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401) {\n            this.invalidCredentials = true;\n            setTimeout(() => {\n              this.invalidCredentials = false;\n            }, 3000);\n          }\n        }\n      }\n    );\n  }\n}\n","<div class=\"container content\">\n  <div class=\"login-form rounded-sm col-sm-4 p-0 mx-auto\">\n    <form\n      #loginForm=\"ngForm\"\n      (ngSubmit)=\"onSubmit()\"\n      class=\"mx-auto bg-white p-5\"\n    >\n      <mat-form-field\n        appearance=\"outline\"\n        [class.mat-form-field-invalid]=\"invalidCredentials\"\n      >\n        <mat-label>Username</mat-label>\n        <input\n          matInput\n          [(ngModel)]=\"formModel.username\"\n          name=\"username\"\n          required\n          appAutofocus\n        />\n      </mat-form-field>\n\n      <mat-form-field\n        appearance=\"outline\"\n        [class.mat-form-field-invalid]=\"invalidCredentials\"\n      >\n        <mat-label>Password</mat-label>\n        <input\n          matInput\n          [(ngModel)]=\"formModel.password\"\n          name=\"password\"\n          type=\"password\"\n          required\n        />\n        <mat-hint class=\"text-danger\" *ngIf=\"invalidCredentials\"\n          >Credentials do not match. Try again</mat-hint\n        >\n      </mat-form-field>\n      <button mat-raised-button type=\"submit\" [disabled]=\"loginForm.invalid\">\n        Login\n      </button>\n    </form>\n  </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as marked from 'marked';\n\n@Pipe({\n  name: 'marked',\n})\nexport class MarkedPipe implements PipeTransform {\n  // parse text into html\n  transform(value: any): any {\n    if (value && value.length > 0) {\n      return marked(value);\n    }\n    return value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\n\nconst MaterialComponents = [\n  MatSliderModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatButtonModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatIconModule,\n  MatListModule,\n  MatButtonToggleModule,\n  MatRadioModule,\n  MatSnackBarModule,\n  MatCardModule,\n  MatTableModule,\n  MatExpansionModule,\n  MatDialogModule,\n  MatSidenavModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: [MaterialComponents],\n  exports: [MaterialComponents],\n})\nexport class MaterialModule {}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-mobile-login',\n  templateUrl: './mobile-login.component.html',\n  styleUrls: ['./mobile-login.component.css'],\n})\nexport class MobileLoginComponent implements OnInit {\n  adminNo;\n  invalidCredentials = false;\n  @ViewChild('loginForm') lf: NgForm;\n\n  constructor(private auth: AuthService) {}\n\n  ngOnInit(): void {}\n\n  // query database for user's admin no\n  onSubmit() {\n    if (this.lf.invalid) {\n      return;\n    }\n    this.auth.mobileLogin(this.adminNo).subscribe(\n      () => {},\n      (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401) {\n            this.invalidCredentials = true;\n            setTimeout(() => {\n              this.invalidCredentials = false;\n            }, 3000);\n          }\n        }\n      }\n    );\n  }\n}\n","<div class=\"container content\">\n  <div class=\"login-form rounded-sm col-sm-4 p-0 mx-auto h\">\n    <form\n      #loginForm=\"ngForm\"\n      (ngSubmit)=\"onSubmit()\"\n      class=\"mx-auto bg-white p-5\"\n    >\n      <mat-form-field\n        appearance=\"outline\"\n        [class.mat-form-field-invalid]=\"invalidCredentials\"\n      >\n        <mat-label>Admin No</mat-label>\n        <input\n          matInput\n          name=\"adminno\"\n          [(ngModel)]=\"adminNo\"\n          required\n          maxlength=\"5\"\n          minlength=\"4\"\n        />\n        <mat-hint class=\"text-danger\" *ngIf=\"invalidCredentials\"\n          >Credentials invalid. Try again</mat-hint\n        >\n      </mat-form-field>\n      <br />\n      <button\n        mat-raised-button\n        type=\"submit\"\n        class=\"w-100\"\n        [disabled]=\"loginForm.invalid\"\n      >\n        View My Notices\n      </button>\n    </form>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport * as Tagify from '@yaireo/tagify';\nimport { AuthService } from '../auth.service';\nimport { GroupList, NoticeGroup } from '../interfaces/Groups';\nimport { NewNotice } from '../interfaces/Notices';\nimport { SectionInfo } from '../interfaces/Section';\nimport { Student } from '../interfaces/Users';\nimport { NoticeService } from '../notice.service';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css'],\n})\nexport class NewComponent implements OnInit, AfterViewInit {\n  private _rights: number | string;\n  userID: number;\n\n  removable: boolean = true;\n  selectable: boolean = true;\n  students: Student[];\n  taggedStudents: Student[];\n  tagify;\n  specificGroup: boolean = true;\n  sectionInfo: SectionInfo[];\n  groupList: GroupList[];\n  today: Date = new Date();\n\n  get dateInPast() {\n    return new Date(this.formModel.display_date) < this.today;\n  }\n\n  formModel: NewNotice;\n\n  @ViewChild('newForm') newForm: NgForm;\n  @ViewChild('tags') tags: ElementRef;\n  @ViewChild('group') group: MatSelect;\n  @ViewChild('date') date;\n\n  constructor(\n    private noticeService: NoticeService,\n    private auth: AuthService,\n    private route: ActivatedRoute,\n    private snackBar: MatSnackBar\n  ) {}\n\n  // initialise all members\n  ngOnInit(): void {\n    this.getSections();\n    this.getGroups();\n    this.getStudents();\n    this.userID = this.auth.userID;\n    this.formModel = new NewNotice(this.userID, null, null, null, null, null);\n    this._rights = this.auth.rights;\n  }\n\n  // initialise Tagify\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      var whitelistStudents = [];\n      this.students.forEach((s) => {\n        whitelistStudents.push({\n          value: s.firstname + ' ' + s.surname,\n          id: s.id,\n        });\n      });\n\n      try {\n        this.tagify = new Tagify(this.tags.nativeElement, {\n          enforceWhitelist: true,\n          delimiters: null,\n          whitelist: whitelistStudents,\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }, 1000);\n  }\n\n  get rights() {\n    return this._rights;\n  }\n\n  // assign resolved Student[] data to students\n  private getStudents() {\n    this.route.data.subscribe((data: { students: Student[] }) => {\n      this.students = data.students;\n    });\n  }\n  // assign resolved SectionInfo[] data to sectionInfo\n  private getSections(): void {\n    this.route.data.subscribe((data: { sectionInfo: SectionInfo[] }) => {\n      this.sectionInfo = data.sectionInfo;\n    });\n  }\n\n  // assign resolved GroupList[] data to groupList\n  private getGroups(): void {\n    this.route.data.subscribe((data: { groupList: GroupList[] }) => {\n      this.groupList = data.groupList;\n    });\n  }\n\n  resetGroup() {\n    this.formModel.gID = null;\n  }\n\n  // write new Notice to database\n  submitForm() {\n    if (this.newForm.invalid || this.dateInPast) {\n      return;\n    }\n    this.formModel.description = this.formModel.description?.trim();\n    this.formModel.title = this.formModel.title?.trim();\n\n    let groupDetail: NoticeGroup = this.group.value;\n    this.formModel.title = this.formModel.title\n      ? this.formModel.title\n      : groupDetail.name;\n    this.formModel.gID = this.specificGroup\n      ? groupDetail.id\n      : this.formModel.gID;\n    let dateDetail = new Date(this.formModel.display_date);\n    this.formModel.display_date = dateDetail.toLocaleDateString('en-ZA');\n    if (this.tags.nativeElement.value) {\n      let tags: any[] = JSON.parse(this.tags.nativeElement.value);\n      tags = tags.map((t) => t.id);\n      this.formModel.tags = tags.toString();\n    }\n    this.noticeService.newNotice(this.formModel).subscribe(\n      () => {\n        this.newForm.resetForm({ specificGroup: true });\n        this.formModel = new NewNotice(\n          this.userID,\n          null,\n          null,\n          null,\n          null,\n          null\n        );\n        this.snackBar.open('Submitted successfully', undefined, {\n          duration: 2000,\n        });\n      },\n      () => {\n        this.snackBar.open(\n          'An error occurred. Please try again after a moment.',\n          undefined,\n          { duration: 5000 }\n        );\n      }\n    );\n  }\n}\n","<div *ngIf=\"sectionInfo && groupList\" class=\"container content rounded-sm\">\r\n  <form\r\n    #newForm=\"ngForm\"\r\n    (ngSubmit)=\"submitForm()\"\r\n    class=\"col-sm-6 mx-auto py-2\"\r\n  >\r\n    <div class=\"card my-2 p-4 mat-elevation-z1\">\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Display Date</mat-label>\r\n        <input\r\n          matInput\r\n          type=\"date\"\r\n          [min]=\"today | date: 'yyyy-MM-dd'\"\r\n          required\r\n          pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n          name=\"date\"\r\n          #date=\"ngModel\"\r\n          [(ngModel)]=\"formModel.display_date\"\r\n          appAutofocus\r\n        />\r\n\r\n        <mat-hint class=\"text-danger\" *ngIf=\"dateInPast && date.touched\">\r\n          Date cannot be in the past\r\n        </mat-hint>\r\n        <mat-error *ngIf=\"date.errors?.required\">\r\n          This field is required\r\n        </mat-error>\r\n        <mat-error *ngIf=\"date.invalid\"> Invalid input </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"card my-2 p-4 mat-elevation-z1\">\r\n      <mat-checkbox\r\n        name=\"specificGroup\"\r\n        [(ngModel)]=\"specificGroup\"\r\n        (click)=\"resetGroup()\"\r\n      >\r\n        This notice belongs in a specific group\r\n      </mat-checkbox>\r\n\r\n      <mat-form-field appearance=\"standard\" *ngIf=\"specificGroup\">\r\n        <mat-label>Group</mat-label>\r\n        <mat-select required name=\"group\" #group=\"ngModel\" ngModel>\r\n          <mat-optgroup\r\n            *ngFor=\"let section of groupList\"\r\n            [label]=\"sectionInfo[section.section - 1].name\"\r\n          >\r\n            <mat-option *ngFor=\"let group of section.groups\" [value]=\"group\">\r\n              {{ group.name }}\r\n            </mat-option>\r\n          </mat-optgroup>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"group?.invalid\"> This field is required </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"standard\" *ngIf=\"!specificGroup\">\r\n        <mat-label>Section</mat-label>\r\n        <mat-select\r\n          required\r\n          name=\"group\"\r\n          #group=\"ngModel\"\r\n          [(ngModel)]=\"formModel.gID\"\r\n        >\r\n          <mat-option\r\n            *ngFor=\"let section of sectionInfo\"\r\n            [value]=\"-1 * section.id\"\r\n          >\r\n            {{ section.name }}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"group?.invalid\"> This field is required </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"card my-2 p-4 mat-elevation-z1\">\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label\r\n          >Title<ng-container *ngIf=\"specificGroup\">\r\n            (Optional)</ng-container\r\n          ></mat-label\r\n        >\r\n        <input\r\n          matInput\r\n          [required]=\"!specificGroup\"\r\n          #title=\"ngModel\"\r\n          name=\"title\"\r\n          [(ngModel)]=\"formModel.title\"\r\n          maxlength=\"100\"\r\n        />\r\n        <mat-hint align=\"end\">\r\n          {{ title?.value?.length || \"0\" }} / 100\r\n        </mat-hint>\r\n        <mat-error *ngIf=\"title?.invalid\"> This field is required </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"card my-2 p-4 mat-elevation-z1\">\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Description</mat-label>\r\n        <textarea\r\n          cdkTextareaAutosize\r\n          matInput\r\n          required\r\n          #description=\"ngModel\"\r\n          name=\"description\"\r\n          [(ngModel)]=\"formModel.description\"\r\n          maxlength=\"1000\"\r\n        ></textarea>\r\n        <mat-hint align=\"end\">\r\n          {{ description?.value?.length || \"0\" }} / 1000\r\n        </mat-hint>\r\n        <mat-error *ngIf=\"description?.invalid\">\r\n          This field is required\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <!-- Tag Students Optional -->\r\n    <div class=\"card my-2 p-4 mat-elevation-z1\">\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Tag Students (Optional)</mat-label>\r\n        <textarea matNativeControl #tags> </textarea>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      type=\"submit\"\r\n      [disabled]=\"newForm.invalid || dateInPast\"\r\n      class=\"w-100\"\r\n    >\r\n      {{ rights >= 3 ? \"Create\" : \"Request\" }}\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { GroupList, NewGroup, NoticeGroup } from './interfaces/Groups';\nimport {\n  AllNotice,\n  Feed,\n  NewNotice,\n  PendingNotice,\n  PrintList,\n} from './interfaces/Notices';\nimport { SectionInfo } from './interfaces/Section';\nimport { Student } from './interfaces/Users';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoticeService {\n  private _dbUrl = 'http://localhost:3000/api';\n  private _sections: SectionInfo[];\n  private _students: Student[];\n\n  /*\n   * @params {@Injectable} Dependencies to inject\n   */\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n  /*\n   * Unless specified otherwise, each of the methods below returns an RxJS Observable\n   * of the results of a specified HTTP request to the dbURL above\n   * for more detailed descriptions, please refer to the server js files\n   */\n\n  /*\n   * @returns {Observable<PendingNotice[]>}\n   */\n  getPending(): Observable<PendingNotice[]> {\n    return this.http\n      .get<PendingNotice[]>(`${this._dbUrl}/pending`)\n      .pipe(catchError(this.handleError<PendingNotice[]>('getPending', [])));\n  }\n\n  /*\n   * @param {number} [id] id of the notice to update\n   * @param {number} [status] status to set\n   * @returns {Observable<any>}\n   */\n  updatePendingStatus(id: number, status: number) {\n    return this.http\n      .put(`${this._dbUrl}/pending`, { id: id, status: status })\n      .pipe(catchError(this.handleError<any>('updatePendingStatus')));\n  }\n\n  // Groups\n\n  /*\n   * @returns {Observable<GroupList[]>}\n   */\n  getGroups(): Observable<GroupList[]> {\n    return this.http\n      .get<GroupList[]>(`${this._dbUrl}/groups`)\n      .pipe(catchError(this.handleError<GroupList[]>('getGroups', [])));\n  }\n\n  /*\n   * @param {number} [id] id of group to change\n   * @param {string} [name] name to set\n   * @returns {Observable<any>}\n   */\n  setGroupName(id: number, name: string) {\n    return this.http\n      .put(`${this._dbUrl}/groups`, { id: id, name: name })\n      .pipe(catchError(this.handleError<any>('editGroupName')));\n  }\n\n  /*\n   * @param {number} [id] id of group to delete\n   * @param {boolean} [recursive] whether to remove all references to the group instead of a group itself\n   * @returns {Observable<any>}\n   */\n  deleteGroup(id: number, recursive: boolean) {\n    return this.http\n      .delete(`${this._dbUrl}/groups/${id}/${recursive}`)\n      .pipe(catchError(this.handleError<any>('deleteGroup')));\n  }\n\n  /*\n   * @param {NewGroup} [group] object with group's name and section\n   * @returns {Observable<any>}\n   */\n  addGroup(group: NewGroup) {\n    return this.http\n      .post(`${this._dbUrl}/groups`, group)\n      .pipe(catchError(this.handleError<any>('addGroup')));\n  }\n\n  // Sections\n\n  /*\n   * @returns {Observable<SectionInfo[]>}\n   */\n  getSections(): Observable<SectionInfo[]> {\n    if (!this._sections) {\n      return this.http.get<SectionInfo[]>(`${this._dbUrl}/sections`).pipe(\n        catchError(this.handleError<SectionInfo[]>('getSections', [])),\n        tap((res) => (this._sections = res))\n      );\n    } else {\n      return of(this._sections);\n    }\n  }\n\n  // New\n\n  /*\n   * @returns {Observable<Student[]>}\n   */\n  getStudents(): Observable<Student[]> {\n    if (!this._students) {\n      return this.http\n        .get<Student[]>(`${this._dbUrl}/students`)\n        .pipe(catchError(this.handleError<Student[]>('getStudents', [])));\n    } else {\n      return of(this._students);\n    }\n  }\n\n  /*\n   * @param {NewNotice} [n] object with the notices's \n      userID, \n      display_date, \n      groupingID, \n      title, \n      description, and \n      optional tags\n   * @returns {Observable<any>}\n   */\n  newNotice(n: NewNotice) {\n    return this.http\n      .post(`${this._dbUrl}/new`, n)\n      .pipe(catchError(this.handleError<any>('newNotice')));\n  }\n\n  // Export\n\n  /*\n   * @param {any} [date] display_date by which to filter notices\n   * @param {any} [sections] (array which will be parsed into) comma-separated ids of sections by which to filter notices\n   * @returns {Observable<PrintList[]>}\n   */\n  exportToPDF(date: any, sections: any): Observable<PrintList[]> {\n    return this.http\n      .get<PrintList[]>(`${this._dbUrl}/export/${date}/${sections}`)\n      .pipe(catchError(this.handleError<PrintList[]>('exportToPDF', [])));\n  }\n\n  // Feed\n\n  /*\n   * @param {number} [id] id of user whose feed to return\n   * @returns {Observable<Feed[]>}\n   */\n  getMyNotices(id: number): Observable<Feed[]> {\n    return this.http\n      .get<Feed[]>(`${this._dbUrl}/feed/${id}`)\n      .pipe(catchError(this.handleError<Feed[]>('getMyNotices', [])));\n  }\n\n  /*\n   * @returns {Observable<Feed[]>}\n   */\n  getMyNoticesMobile(): Observable<Feed[]> {\n    return this.http\n      .get<Feed[]>(`${this._dbUrl}/mobile/feed`)\n      .pipe(catchError(this.handleError<Feed[]>('getMyNoticesMobile', [])));\n  }\n\n  /*\n   * @param {number} [id] id of user whose subscriptions to return\n   * @returns {Observable<NoticeGroup[]>}\n   */\n  getSubs(id: number): Observable<NoticeGroup[]> {\n    return this.http\n      .get<NoticeGroup[]>(`${this._dbUrl}/subs/${id}`)\n      .pipe(catchError(this.handleError<NoticeGroup[]>('getSubs', [])));\n  }\n\n  /*\n   * @param {number} [id] id of user whose subscriptions to insert\n   * @param {string} [add] comma-separated ids of groups to insert\n   * @returns {Observable<any>}\n   */\n  addSubs(id: number, add: string) {\n    return this.http\n      .post(`${this._dbUrl}/subs/${id}/${add}`, {})\n      .pipe(catchError(this.handleError<any>('addSubs')));\n  }\n\n  /*\n   * @param {number} [id] id of user whose subscriptions to delete\n   * @param {string} [remove] comma-separated ids of groups to delete\n   * @returns {Observable<any>}\n   */\n  removeSubs(id: number, remove: string) {\n    return this.http\n      .delete(`${this._dbUrl}/subs/${id}/${remove}`, {})\n      .pipe(catchError(this.handleError<any>('removeSubs')));\n  }\n\n  // All\n\n  /*\n   * @returns {Observable<AllNotice[]>}\n   */\n  getAll(): Observable<AllNotice[]> {\n    return this.http\n      .get<AllNotice[]>(`${this._dbUrl}/all`)\n      .pipe(catchError(this.handleError<AllNotice[]>('getAll', [])));\n  }\n\n  /*\n   * @param {number} [id] id of notice to edit\n   * @param {string} [title] title to set\n   * @param {string} [description] description to set\n   * @returns {Observable<any>}\n   */\n  editNotice(id: number, title: string, description: string) {\n    return this.http\n      .put(`${this._dbUrl}/edit`, {\n        id: id,\n        title: title,\n        description: description,\n      })\n      .pipe(catchError(this.handleError<any>('editNotice')));\n  }\n\n  /*\n   * Returns an empty observable of the specified type upon an error of an HTTP request. \n      This is to prevent the application from crashing after such an error\n   * @type [T] type of empty Observable to return\n   * @param {string} [operation] name of the operation which failed\n   * @param {T} [result] empty Observable to return\n   * @returns {Observable<T>}\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      //MySQL Foreign Key Constraint/Referential integrity error -- handled elsewhere\n      if (error['error']['errno'] === 1451) {\n        throw error;\n      }\n\n      if (error instanceof HttpErrorResponse) {\n        if (error.status === 401) {\n          // Unauthorised access to API route\n          this.snackBar.open(\n            'You do not have access to this resource',\n            undefined,\n            {\n              duration: 2000,\n            }\n          );\n        }\n      }\n\n      console.error(error);\n      return of(result as T);\n    };\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { PasswordValidator } from '../shared/password.validator';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.css'],\n})\nexport class PasswordComponent implements OnInit {\n  minPw = 8;\n  formGroup: FormGroup;\n  invalidCredentials = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.formGroup = this.fb.group(\n      {\n        oldPassword: ['', [Validators.required]],\n        newPassword: [\n          '',\n          [Validators.required, Validators.minLength(this.minPw)],\n        ],\n        confirmNewPassword: ['', [Validators.required]],\n      },\n      { validator: PasswordValidator }\n    );\n  }\n\n  get oldPassword() {\n    return this.formGroup.get('oldPassword');\n  }\n  get newPassword() {\n    return this.formGroup.get('newPassword');\n  }\n  get confirmNewPassword() {\n    return this.formGroup.get('confirmNewPassword');\n  }\n\n  // update mismatch validator\n  onPasswordInput() {\n    if (this.formGroup.hasError('misMatch'))\n      this.confirmNewPassword.setErrors([{ misMatch: true }]);\n    else this.confirmNewPassword.setErrors(null);\n  }\n\n  // write password changes to database\n  onSubmit() {\n    if (this.formGroup.valid) {\n      this.authService\n        .changePassword(this.oldPassword.value, this.newPassword.value)\n        .subscribe(\n          () => {\n            let snackBarRef = this.snackBar.open(\n              'Password changed successfully',\n              undefined,\n              { duration: 2000 }\n            );\n            snackBarRef.afterDismissed().subscribe(() => {\n              this.router.navigate(['/home']);\n            });\n          },\n          (err) => {\n            if (err instanceof HttpErrorResponse) {\n              if (err.status === 401) {\n                this.invalidCredentials = true;\n                setTimeout(() => {\n                  this.invalidCredentials = false;\n                }, 3000);\n              }\n            }\n          }\n        );\n    }\n  }\n}\n","<div class=\"container content\">\n  <div class=\"password-form rounded-sm col-sm-4 p-0 mx-auto\">\n    <form\n      [formGroup]=\"formGroup\"\n      class=\"mx-auto bg-white p-5\"\n      (ngSubmit)=\"onSubmit()\"\n    >\n      <mat-form-field\n        appearance=\"outline\"\n        [class.mat-form-field-invalid]=\"invalidCredentials\"\n      >\n        <mat-label>Old Password</mat-label>\n        <input\n          matInput\n          type=\"password\"\n          formControlName=\"oldPassword\"\n          (input)=\"onPasswordInput()\"\n          appAutofocus\n        />\n        <mat-error *ngIf=\"oldPassword.hasError('required')\"\n          >This field is required</mat-error\n        >\n      </mat-form-field>\n\n      <mat-form-field\n        appearance=\"outline\"\n        [class.mat-form-field-invalid]=\"invalidCredentials\"\n      >\n        <mat-label>New Password</mat-label>\n        <input\n          matInput\n          type=\"password\"\n          formControlName=\"newPassword\"\n          (input)=\"onPasswordInput()\"\n        />\n        <mat-error *ngIf=\"newPassword.hasError('required')\"\n          >This field is required</mat-error\n        >\n        <mat-error *ngIf=\"newPassword.hasError('minlength')\"\n          >Password must have at least {{ minPw }} characters</mat-error\n        >\n      </mat-form-field>\n\n      <mat-form-field\n        appearance=\"outline\"\n        [class.mat-form-field-invalid]=\"invalidCredentials\"\n      >\n        <mat-label>Confirm New Password</mat-label>\n        <input\n          matInput\n          type=\"password\"\n          formControlName=\"confirmNewPassword\"\n          (input)=\"onPasswordInput()\"\n        />\n        <mat-error *ngIf=\"confirmNewPassword.hasError('required')\"\n          >Please confirm your password</mat-error\n        >\n        <mat-error *ngIf=\"formGroup.errors?.misMatch\"\n          >Passwords don't match</mat-error\n        >\n        <mat-hint class=\"text-danger\" *ngIf=\"invalidCredentials\"\n          >Invalid Credentials. Try again</mat-hint\n        >\n      </mat-form-field>\n\n      <button\n        mat-raised-button\n        type=\"submit\"\n        [disabled]=\"formGroup.invalid || !confirmNewPassword.value\"\n      >\n        Submit\n      </button>\n    </form>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\ninterface DialogData {\n  message: string;\n}\n@Component({\n  selector: 'app-pending-dialog',\n  templateUrl: './pending-dialog.component.html',\n})\nexport class PendingDialogComponent implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  ngOnInit(): void {}\n}\n","<h1 mat-dialog-title>Error: {{ data.message }}</h1>\n<mat-dialog-actions align=\"end\">\n  <button mat-button [mat-dialog-close]=\"true\">Try Again</button>\n  <button mat-button [mat-dialog-close]=\"false\" cdkFocusInitial>Cancel</button>\n</mat-dialog-actions>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { PendingNotice } from '../interfaces/Notices';\nimport { TableItemComponent } from '../table/table-item/table-item.component';\n\n@Component({\n  selector: '[app-pending-item]',\n  templateUrl: './pending-item.component.html',\n  styleUrls: ['../table/table-item/table-item.component.css'],\n})\nexport class PendingItemComponent extends TableItemComponent implements OnInit {\n  @Input() notice: PendingNotice;\n  @Output() markedForApproval = new EventEmitter<number>();\n  @Output() markedForDenial = new EventEmitter<number>();\n\n  // emit an event to parent component to mark for approval\n  markForApproval(id) {\n    this.markedForApproval.emit(id);\n  }\n  // emit an event to parent component to mark for denial\n  markForDenial(id) {\n    this.markedForDenial.emit(id);\n  }\n}\n","<td class=\"td-date\">{{ notice.display_date | date: \"d MMM\" }}</td>\n<td class=\"td-group\">{{ notice.grouping_name }}</td>\n<td (dblclick)=\"allowTitleEdits()\" class=\"td-title\">\n  <textarea\n    title=\"Double-Click to Edit\"\n    cdkTextareaAutosize\n    [(ngModel)]=\"notice.title\"\n    [disabled]=\"!editableTitle\"\n    required\n    #title=\"ngModel\"\n    maxlength=\"100\"\n  ></textarea>\n  <div *ngIf=\"editableTitle\">\n    <button\n      mat-raised-button\n      class=\"keep\"\n      (click)=\"keepTitle()\"\n      [disabled]=\"title.invalid\"\n    >\n      Keep\n    </button>\n    <button mat-raised-button class=\"discard\" (click)=\"discardTitle()\">\n      Discard\n    </button>\n  </div>\n</td>\n<td (dblclick)=\"allowDescrEdits()\" class=\"td-descr\">\n  <textarea\n    title=\"Double-Click to Edit\"\n    cdkTextareaAutosize\n    [(ngModel)]=\"notice.description\"\n    [disabled]=\"!editableDescr\"\n    required\n    #descr=\"ngModel\"\n    maxlength=\"1000\"\n  ></textarea>\n  <div *ngIf=\"editableDescr\">\n    <button\n      mat-raised-button\n      class=\"keep\"\n      (click)=\"keepDescr()\"\n      [disabled]=\"descr.invalid\"\n    >\n      Keep\n    </button>\n    <button mat-raised-button class=\"discard\" (click)=\"discardDescr()\">\n      Discard\n    </button>\n  </div>\n</td>\n<td class=\"td-user\">{{ notice.user }}</td>\n<td class=\"approve\" class=\"td-approve\">\n  <mat-radio-group>\n    <mat-radio-button (click)=\"markForApproval(notice.id)\" value=\"y\"\n      >Yes</mat-radio-button\n    >\n    <br />\n    <mat-radio-button (click)=\"markForDenial(notice.id)\" value=\"n\"\n      >No</mat-radio-button\n    >\n  </mat-radio-group>\n</td>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { PendingNotice } from '../interfaces/Notices';\nimport { TableComponent } from '../table/table.component';\n\n@Component({\n  selector: 'app-pending',\n  templateUrl: './pending.component.html',\n  styleUrls: ['../table/table.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PendingComponent extends TableComponent implements OnInit {\n  pendingNotices: PendingNotice[];\n  idsForApproval: number[] = [];\n  idsForDenial: number[] = [];\n\n  // assign resolved PendingNotice[] data to pendingNotices\n  getPending(): void {\n    this.route.data.subscribe((data: { pendingNotices: PendingNotice[] }) => {\n      this.pendingNotices = data.pendingNotices;\n    });\n  }\n\n  // add notice id to idsForApproval\n  markForApproval(id) {\n    this.idsForApproval.push(id);\n    this.idsForDenial = this.idsForDenial.filter((dID) => dID !== id);\n  }\n  // add notice id to idsForDenial\n  markForDenial(id) {\n    this.idsForDenial.push(id);\n    this.idsForApproval = this.idsForApproval.filter((dID) => dID !== id);\n  }\n\n  // remove approved or denied notices from list\n  private updateList() {\n    this.pendingNotices = this.pendingNotices.filter(\n      (notice) =>\n        !(\n          this.idsForApproval.includes(notice.id) ||\n          this.idsForDenial.includes(notice.id)\n        )\n    );\n    this.idsForApproval.forEach((id) =>\n      this.noticeService.updatePendingStatus(id, 3).subscribe(\n        () => {},\n        () => {\n          this.warn('Failed to apply approval/denial');\n        }\n      )\n    );\n    this.idsForDenial.forEach((id) =>\n      this.noticeService.updatePendingStatus(id, 2).subscribe(\n        () => {},\n        () => {\n          this.warn('Failed to apply approval/denial');\n        }\n      )\n    );\n  }\n\n  // send an effective ping through the savePing subject to subscribers\n  async saveChanges() {\n    await this.savePing.next('');\n    this.updateList();\n  }\n\n  ngOnInit(): void {\n    this.getPending();\n  }\n}\n","<div class=\"container content\">\n  <table class=\"pending table rounded-sm\">\n    <thead class=\"rounded-sm\">\n      <th class=\"th-date\">Date</th>\n      <th class=\"th-group\">Group</th>\n      <th class=\"th-title\">Title</th>\n      <th class=\"th-descr\">Description</th>\n      <th class=\"th-user\">User</th>\n      <th class=\"th-approve\">Approve?</th>\n    </thead>\n    <tr\n      *ngFor=\"let notice of pendingNotices\"\n      app-pending-item\n      [notice]=\"notice\"\n      (markedForApproval)=\"markForApproval($event)\"\n      (markedForDenial)=\"markForDenial($event)\"\n      (error)=\"warn($event)\"\n      [savePing]=\"savePing\"\n    ></tr>\n  </table>\n  <div class=\"save\">\n    <button mat-raised-button (click)=\"saveChanges()\">Save Changes</button>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { PrintList } from '../interfaces/Notices';\nimport { SectionInfo } from '../interfaces/Section';\n\n@Component({\n  selector: 'app-printout',\n  templateUrl: './printout.component.html',\n  styleUrls: ['./printout.component.css'],\n})\nexport class PrintoutComponent implements OnInit {\n  @Input() exportModel;\n  @Input() dailyNotices: PrintList[];\n  @Input() sectionInfo: SectionInfo[];\n\n  constructor(private snackBar: MatSnackBar) {}\n\n  // inform user that printout is ready\n  ngOnInit(): void {\n    let snackBarRef = this.snackBar.open('Ready for export!', 'PRINT TO PDF', {\n      duration: 50000,\n    });\n    snackBarRef.afterDismissed().subscribe(() => {\n      window.print();\n    });\n  }\n}\n","<div class=\"printout container-fluid bg-white col-sm-12 mx-auto\">\n  <div>\n    <h1>Daily Routine Order</h1>\n    <h2>\n      {{ exportModel.date | date: \"d MMMM y\" }} :\n      {{ exportModel.date | date: \"EEEE\" | uppercase }}\n    </h2>\n    <table *ngFor=\"let section of dailyNotices\">\n      <th colspan=\"2\">\n        {{ sectionInfo[section.section - 1].name | uppercase }}\n      </th>\n      <tr *ngFor=\"let notice of section.notices; let i = index\">\n        <td>{{ i + 1 }}</td>\n        <td>\n          <span\n            [innerHTML]=\"\n              '**' + notice.title + '**: ' + notice.description | marked\n            \"\n          ></span>\n        </td>\n      </tr>\n    </table>\n\n    <br /><br />\n    <strong>AR Laing</strong>\n    <br />\n    DEPUTY RECTOR (Pupils)\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { BaseGuard } from './base.guard';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PupilGuard extends BaseGuard implements CanActivate {\n  requiredRights = 1;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AllNotice } from '../interfaces/Notices';\nimport { BaseResolverService } from './base-resolver.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AllTableResolverService\n  extends BaseResolverService\n  implements Resolve<AllNotice[]> {\n  /*\n   * Returns an RxJS Observable from the NoticeService call and \n      waits for a next value before completing navigation \n   * @param {ActivatedRouteSnapshot} [route] \"Contains the information about a route ... at a particular moment in time\"\n   * @param {RouterStateSnapshot} [state] \"Represents the state of the router at a moment in time.\"\n   */\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<AllNotice[]> {\n    return this.ns.getAll();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { NoticeService } from '../notice.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BaseResolverService {\n  /*\n   * @params {@Injectable} Dependencies to inject\n   */\n  constructor(\n    protected ns: NoticeService,\n    // protected router: Router,\n    protected auth: AuthService\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Feed } from '../interfaces/Notices';\nimport { BaseResolverService } from './base-resolver.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeedResolverService\n  extends BaseResolverService\n  implements Resolve<Feed[]> {\n  /*\n   * Returns an RxJS Observable from the NoticeService call and \n      waits for a next value before completing navigation \n   * @param {ActivatedRouteSnapshot} [route] \"Contains the information about a route ... at a particular moment in time\"\n   * @param {RouterStateSnapshot} [state] \"Represents the state of the router at a moment in time.\"\n   */\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<Feed[]> {\n    if (state.url.includes('mobile')) {\n      return this.ns.getMyNoticesMobile();\n    } else {\n      return this.ns.getMyNotices(this.auth.userID);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { GroupList } from '../interfaces/Groups';\nimport { BaseResolverService } from './base-resolver.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GroupsResolverService\n  extends BaseResolverService\n  implements Resolve<GroupList[]> {\n  /*\n   * Returns an RxJS Observable from the NoticeService call and \n      waits for a next value before completing navigation \n   * @param {ActivatedRouteSnapshot} [route] \"Contains the information about a route ... at a particular moment in time\"\n   * @param {RouterStateSnapshot} [state] \"Represents the state of the router at a moment in time.\"\n   */\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<GroupList[]> {\n    return this.ns.getGroups();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { PendingNotice } from '../interfaces/Notices';\nimport { BaseResolverService } from './base-resolver.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PendingResolverService\n  extends BaseResolverService\n  implements Resolve<PendingNotice[]> {\n  /*\n   * Returns an RxJS Observable from the NoticeService call and \n      waits for a next value before completing navigation \n   * @param {ActivatedRouteSnapshot} [route] \"Contains the information about a route ... at a particular moment in time\"\n   * @param {RouterStateSnapshot} [state] \"Represents the state of the router at a moment in time.\"\n   */\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<PendingNotice[]> {\n    return this.ns.getPending();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SectionInfo } from '../interfaces/Section';\nimport { BaseResolverService } from './base-resolver.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SectionsResolverService\n  extends BaseResolverService\n  implements Resolve<SectionInfo[]> {\n  /*\n   * Returns an RxJS Observable from the NoticeService call and \n      waits for a next value before completing navigation \n   * @param {ActivatedRouteSnapshot} [route] \"Contains the information about a route ... at a particular moment in time\"\n   * @param {RouterStateSnapshot} [state] \"Represents the state of the router at a moment in time.\"\n   */\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<SectionInfo[]> {\n    return this.ns.getSections();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Student } from '../interfaces/Users';\nimport { BaseResolverService } from './base-resolver.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StudentsResolverService\n  extends BaseResolverService\n  implements Resolve<Student[]> {\n  /*\n   * Returns an RxJS Observable from the NoticeService call and \n      waits for a next value before completing navigation \n   * @param {ActivatedRouteSnapshot} [route] \"Contains the information about a route ... at a particular moment in time\"\n   * @param {RouterStateSnapshot} [state] \"Represents the state of the router at a moment in time.\"\n   */\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<Student[]> {\n    return this.ns.getStudents();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { NoticeGroup } from '../interfaces/Groups';\nimport { BaseResolverService } from './base-resolver.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SubsResolverService\n  extends BaseResolverService\n  implements Resolve<NoticeGroup[]> {\n  /*\n   * Returns an RxJS Observable from the NoticeService call and \n      waits for a next value before completing navigation \n   * @param {ActivatedRouteSnapshot} [route] \"Contains the information about a route ... at a particular moment in time\"\n   * @param {RouterStateSnapshot} [state] \"Represents the state of the router at a moment in time.\"\n   */\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<NoticeGroup[]> {\n    return this.ns.getSubs(this.auth.userID);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\r\n\r\n// checks whether two password fields match\r\nexport function PasswordValidator(\r\n  control: AbstractControl\r\n): { [key: string]: boolean } | null {\r\n  const password = control.get('newPassword');\r\n  const confirmPassword = control.get('confirmNewPassword');\r\n  if (password.pristine || confirmPassword.pristine) {\r\n    return null;\r\n  }\r\n  return password && confirmPassword && password.value !== confirmPassword.value\r\n    ? { misMatch: true }\r\n    : null;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { BaseGuard } from './base.guard';\n@Injectable({\n  providedIn: 'root',\n})\nexport class StaffGuard extends BaseGuard implements CanActivate {\n  requiredRights = 2;\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { AuthService } from 'src/app/auth.service';\nimport { AllNotice, PendingNotice } from 'src/app/interfaces/Notices';\nimport { NoticeService } from 'src/app/notice.service';\n\n@Component({\n  selector: 'app-table-item',\n  templateUrl: './table-item.component.html',\n  styleUrls: ['./table-item.component.css'],\n})\nexport class TableItemComponent implements OnInit {\n  notice: AllNotice | PendingNotice;\n  @Input() savePing: Subject<any>;\n  @Output() error = new EventEmitter<any>();\n  @ViewChild('title') title: NgModel;\n  @ViewChild('descr') descr: NgModel;\n\n  editableTitle: boolean = false;\n  editableDescr: boolean = false;\n  protected initial: string[];\n  protected edits: string[];\n\n  constructor(\n    protected noticeService: NoticeService,\n    protected auth: AuthService\n  ) {}\n\n  // initialise members\n  ngOnInit(): void {\n    this.initial = [this.notice.title, this.notice.description];\n    this.edits = [this.notice.title, this.notice.description];\n    this.savePing.subscribe((ping) => {\n      this.saveEdits();\n    });\n    this.init();\n  }\n\n  protected init() {}\n\n  allowTitleEdits() {\n    this.editableTitle = true;\n  }\n  allowDescrEdits() {\n    this.editableDescr = true;\n  }\n\n  // save changes to title locally if valid\n  keepTitle() {\n    if (this.title.invalid) {\n      this.discardTitle();\n      return;\n    }\n    this.edits[0] = this.notice.title.trim();\n    this.editableTitle = false;\n  }\n  discardTitle() {\n    this.notice.title = this.edits[0].trim();\n    this.editableTitle = false;\n  }\n\n  // save changes to description locally if valid\n  keepDescr() {\n    if (this.descr.invalid) {\n      this.discardDescr();\n      return;\n    }\n    this.edits[1] = this.notice.description.trim();\n    this.editableDescr = false;\n  }\n  discardDescr() {\n    this.notice.description = this.edits[1].trim();\n    this.editableDescr = false;\n  }\n\n  // write changes to database if there are any effectively refresh notice\n  protected saveEdits() {\n    if (\n      this.initial[0] !== this.edits[0] ||\n      this.initial[1] !== this.edits[1]\n    ) {\n      this.noticeService\n        .editNotice(this.notice.id, this.notice.title, this.notice.description)\n        .subscribe(\n          () => {},\n          (err) => this.error.emit('Failed to save edits')\n        );\n      this.initial = [...this.edits];\n    }\n  }\n}\n","<p>table-item works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, NavigationStart, Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { AuthService } from '../auth.service';\nimport { NoticeService } from '../notice.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css'],\n})\nexport class TableComponent implements OnInit {\n  protected savePing: Subject<any> = new Subject();\n\n  constructor(\n    protected router: Router,\n    protected snackBar: MatSnackBar,\n    protected route: ActivatedRoute,\n    protected auth: AuthService,\n    protected noticeService: NoticeService\n  ) {}\n\n  ngOnInit(): void {}\n\n  // open a snackbar with an error message\n  protected warn(message: any) {\n    let snackBarRef = this.snackBar.open(`${message}. Please try again.`, 'OK');\n\n    snackBarRef.onAction().subscribe(() => {\n      location.reload();\n    });\n    this.router.events.subscribe((e) => {\n      if (e instanceof NavigationStart) {\n        snackBarRef.dismiss();\n      }\n    });\n  }\n}\n","<p>table works!</p>\n","import { HttpInterceptor } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  /*\n   * “Identifies and handles a given HTTP request,” appending the current user’s token to it\n   */\n  intercept(req, next) {\n    let auth = this.injector.get(AuthService);\n    let tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${auth.token}`,\n      },\n    });\n    return next.handle(tokenizedReq);\n  }\n  constructor(private injector: Injector) {}\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { DeviceService } from '../device.service';\nimport { HelpService } from '../help.service';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css'],\n})\nexport class TopBarComponent implements OnInit {\n  @Input() title: string;\n  web: boolean;\n  mobile: boolean;\n\n  constructor(\n    private auth: AuthService,\n    private device: DeviceService,\n    private help: HelpService\n  ) {}\n\n  ngOnInit(): void {\n    this.web = this.device.web;\n    this.mobile = this.device.mobile;\n  }\n\n  get rights() {\n    return this.auth.rights;\n  }\n\n  get isLoggedIn() {\n    return this.auth.isLoggedIn;\n  }\n\n  getHelp() {\n    this.help.getHelp();\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n}\n","<nav class=\"navbar navbar-expand-sm\">\n  <a class=\"navbar-brand\" routerLink=\"home\">\n    <img\n      src=\"../../assets/images/logo-100.png\"\n      alt=\"Michaelhouse Logo\"\n      class=\"logo\"\n    />\n  </a>\n  <span class=\"navbar-text mr-auto\" [class.small-title]=\"mobile\">\n    | {{ title }}\n  </span>\n\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#collapsibleNavbar\"\n  >\n    <mat-icon>menu</mat-icon>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n    <ul class=\"navbar-nav\" id=\"navlinks\" *ngIf=\"web && isLoggedIn\">\n      <li class=\"nav-item dropdown\" *ngIf=\"rights >= 3\">\n        <a\n          class=\"nav-link dropdown-toggle\"\n          href=\"#\"\n          id=\"navbardrop\"\n          data-toggle=\"dropdown\"\n        >\n          Manage\n        </a>\n        <div class=\"dropdown-menu\">\n          <a class=\"dropdown-item\" routerLink=\"pending\">Pending Notices</a>\n          <a class=\"dropdown-item\" routerLink=\"groups\">Notice Groups</a>\n        </div>\n      </li>\n      <li class=\"nav-item dropdown\" *ngIf=\"rights >= 2\">\n        <a\n          class=\"nav-link dropdown-toggle\"\n          href=\"#\"\n          id=\"navbardrop\"\n          data-toggle=\"dropdown\"\n        >\n          Publish\n        </a>\n        <div class=\"dropdown-menu\">\n          <a class=\"dropdown-item\" routerLink=\"new\">New Notice</a>\n          <a class=\"dropdown-item\" routerLink=\"export\">Export to PDF</a>\n        </div>\n      </li>\n      <li class=\"nav-item dropdown\">\n        <a\n          class=\"nav-link dropdown-toggle\"\n          href=\"#\"\n          id=\"navbardrop\"\n          data-toggle=\"dropdown\"\n        >\n          View\n        </a>\n        <div class=\"dropdown-menu\">\n          <a class=\"dropdown-item\" routerLink=\"feed\">My Feed</a>\n          <a class=\"dropdown-item\" routerLink=\"all\">All Notices</a>\n        </div>\n      </li>\n    </ul>\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item dropdown\" *ngIf=\"web && isLoggedIn\">\n        <a class=\"nav-link\" href=\"#\" id=\"navbardrop\" data-toggle=\"dropdown\">\n          My Profile\n        </a>\n        <div class=\"dropdown-menu dropdown-menu-right\">\n          <a class=\"dropdown-item\" routerLink=\"password\">Change Password</a>\n          <a\n            class=\"dropdown-item\"\n            href=\"#\"\n            id=\"navbardrop\"\n            data-toggle=\"dropdown\"\n          >\n            Logout\n          </a>\n          <div class=\"dropdown-menu dropdown-menu-right\">\n            <a class=\"dropdown-item\" style=\"cursor: pointer\" (click)=\"logout()\"\n              >Confirm</a\n            >\n          </div>\n        </div>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\n        <a class=\"nav-link\" routerLink=\"login\">Login</a>\n      </li>\n\n      <li class=\"nav-item dropdown\" *ngIf=\"mobile && isLoggedIn\">\n        <a class=\"nav-link\" href=\"#\" id=\"navbardrop\" data-toggle=\"dropdown\">\n          Logout\n        </a>\n        <div class=\"dropdown-menu dropdown-menu-right\">\n          <a class=\"dropdown-item\" style=\"cursor: pointer\" (click)=\"logout()\"\n            >Confirm</a\n          >\n        </div>\n      </li>\n      <li class=\"nav-item\" (click)=\"getHelp()\">\n        <a class=\"nav-link\"> Help </a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}